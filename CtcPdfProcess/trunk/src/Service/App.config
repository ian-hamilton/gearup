<?xml version="1.0"?>
<configuration>

  <appSettings>
    <add key="outDirectory" value="/out"/>
    <add key="listenDirectory" value="c:/temp"/>
  </appSettings>
  
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <connectionStrings>
    <add name="ctcEntities" connectionString="metadata=res://*/dao.Ctc.csdl|res://*/dao.Ctc.ssdl|res://*/dao.Ctc.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=uber;Initial Catalog=ctc;Persist Security Info=True;User ID=ctc;Password=CTC;MultipleActiveResultSets=True&quot;" providerName="System.Data.EntityClient"/>
  </connectionStrings>

  <log4net>
    <!-- Define some output appenders -->
    <appender name="consoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d{ISO8601} [%t] [%-5p] %c - %m%n"/>
      </layout>
    </appender>
    <!-- 
			This is specially configured for use with NUnit because multiple threads
			need access to the same log file.
		-->
    <appender name="fileAppender" type="log4net.Appender.FileAppender">
      <file value="DataAccess.Test.log"/>
      <appendToFile value="true"/>
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d{ISO8601} [%t] [%-5p] %c - %m%n"/>
      </layout>
    </appender>
    <!--
        	* 	Because this is for testing, run at DEBUG level. 
        	*	The consoleAppender will make logging available in the 
        		Console.Out tab of the NUnit GUI.
			*	The fileAppender will store the logging output for reference.
				This is convenient because the logging output in NUnit is
				erased after each test run.        		
        -->
    <root>
      <priority value="DEBUG"/>
      <appender-ref ref="consoleAppender"/>
      <appender-ref ref="fileAppender"/>
    </root>
  </log4net>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
</configuration>
